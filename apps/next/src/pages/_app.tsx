import { AppProps } from 'next/app'

import { api } from 'src/utils/api'
import { createPagesBrowserClient, type Session } from '@supabase/auth-helpers-nextjs'
import { SessionContextProvider } from '@supabase/auth-helpers-react'

import '@/styles/globals.css'
import Head from 'next/head'
import React, { useEffect, useState } from 'react'
import { getUser } from '@/utils/supabase'
import { useRouter } from 'next/router'
import { ThemeProvider } from 'next-themes'
import { useUser } from '@/utils/supabase/auth'
import { useSupabaseUser, useUserLoading } from '@/atoms/auth'

function MyApp({ Component, pageProps }: AppProps<{ initialSession: Session | null }>) {
	const [supabaseClient] = useState(() => createPagesBrowserClient())
	const { push, pathname } = useRouter()
	useUser()
	const [user] = useSupabaseUser()
	const [isUserLoading] = useUserLoading()

	if (!isUserLoading) {
		if (user && (pathname === '/sign-in' || pathname === '/sign-up')) {
			push('/')
		} else if (!user && !(pathname === '/sign-in' || pathname === '/sign-up')) {
			push('/sign-in')
		}
	}

	return (
		<>
			<Head>
				<title>Create T3 App</title>
				<meta name="description" content="Generated by create-t3-app" />
				<link rel="icon" href="/favicon.ico" />
			</Head>
			<ThemeProvider attribute="class">
				<SessionContextProvider supabaseClient={supabaseClient} initialSession={pageProps.initialSession}>
					<div className="flex h-screen w-screen">
						<Component {...pageProps} />
					</div>
				</SessionContextProvider>
			</ThemeProvider>
		</>
	)
}

export default api.withTRPC(MyApp)
